const express = require('express');
const router = express.Router();
const { query } = require('../config/database');

// –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
router.get('/', async (req, res) => {
  try {
    console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...');
    
    const productsQuery = `
      SELECT 
        p.id,
        p.name,
        p.price,
        p.quantity,
        p.category_id,
        c.name as category_name,
        p.manufacturer_id,
        m.name as manufacturer_name,
        p.created_at
      FROM product p
      LEFT JOIN category c ON p.category_id = c.id
      LEFT JOIN manufacturer m ON p.manufacturer_id = m.id
      ORDER BY p.created_at DESC
    `;

    const result = await query(productsQuery);
    
    console.log('‚úÖ –¢–æ–≤–∞—Ä—ã –ø–æ–ª—É—á–µ–Ω—ã:', result.rows.length);
    
    res.json({
      success: true,
      products: result.rows,
      pagination: {
        currentPage: 1,
        totalPages: 1,
        totalItems: result.rows.length,
        hasNextPage: false,
        hasPrevPage: false,
        limit: result.rows.length
      }
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error);
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤: ' + error.message
    });
  }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
router.get('/categories/all', async (req, res) => {
  try {
    const categoriesQuery = 'SELECT id, name FROM category ORDER BY name';
    const result = await query(categoriesQuery);

    res.json({
      success: true,
      categories: result.rows
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π'
    });
  }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π
router.get('/manufacturers/all', async (req, res) => {
  try {
    const manufacturersQuery = 'SELECT id, name FROM manufacturer ORDER BY name';
    const result = await query(manufacturersQuery);

    res.json({
      success: true,
      manufacturers: result.rows
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π:', error);
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π'
    });
  }
});

module.exports = router;

