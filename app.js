const express = require('express');
const cors = require('cors');
const helmet = require('helmet');
const rateLimit = require('express-rate-limit');
require('dotenv').config();

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
console.log('üóÑÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL');
const authRoutes = require('./routes/auth');
const productRoutes = require('./routes/products');
const clientRoutes = require('./routes/mock-clients'); // –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –º–æ–∫ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
const orderRoutes = require('./routes/mock-orders'); // –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –º–æ–∫ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
const cartRoutes = require('./routes/cart');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º inline —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
app.use(helmet({
  contentSecurityPolicy: {
    directives: {
      defaultSrc: ["'self'"],
      styleSrc: ["'self'", "'unsafe-inline'"],
      scriptSrc: ["'self'", "'unsafe-inline'"],
      scriptSrcAttr: ["'unsafe-inline'"],
      imgSrc: ["'self'", "data:", "https:"],
      connectSrc: ["'self'"],
      fontSrc: ["'self'", "https:", "data:"],
      objectSrc: ["'none'"],
      mediaSrc: ["'self'"],
      frameSrc: ["'none'"],
    },
  },
}));

// CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
app.use(cors({
  origin: process.env.FRONTEND_URL || 'http://localhost:3001',
  credentials: true
}));

// Rate limiting
const limiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
  max: 100 // –º–∞–∫—Å–∏–º—É–º 100 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –æ–¥–Ω–æ–≥–æ IP –∑–∞ 15 –º–∏–Ω—É—Ç
});
app.use(limiter);

// –ü–∞—Ä—Å–∏–Ω–≥ JSON
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true }));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static('public'));

// –ú–∞—Ä—à—Ä—É—Ç—ã API
app.use('/api/auth', authRoutes);
app.use('/api/products', productRoutes);
app.use('/api/clients', clientRoutes);
app.use('/api/orders', orderRoutes);
app.use('/api/cart', cartRoutes);

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
  res.json({
    message: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ API',
    version: '1.0.0',
    endpoints: {
      auth: '/api/auth',
      products: '/api/products',
      clients: '/api/clients',
      orders: '/api/orders',
      cart: '/api/cart'
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({
    error: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!',
    message: process.env.NODE_ENV === 'development' ? err.message : '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
  });
});

// 404 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
app.use('*', (req, res) => {
  res.status(404).json({
    error: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
    message: `–ú–∞—Ä—à—Ä—É—Ç ${req.originalUrl} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–æ—Ä—Ç–∞
const server = app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}`);
  console.log(`–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}/index.html`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∑–∞–Ω—è—Ç–æ–≥–æ –ø–æ—Ä—Ç–∞
server.on('error', (err) => {
  if (err.code === 'EADDRINUSE') {
    console.log(`–ü–æ—Ä—Ç ${PORT} –∑–∞–Ω—è—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞ –¥—Ä—É–≥–æ–º –ø–æ—Ä—Ç—É:`);
    console.log(`PORT=3001 npm start`);
    process.exit(1);
  }
});

module.exports = app;
